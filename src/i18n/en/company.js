export default {
  title: 'Company Settings',
  tabs: {
    details: 'Company Details',
    bankAccounts: 'Bank Accounts',
    documents: 'Legal Documents',
    invoiceTemplates: 'Invoice Templates',
    wialonIntegration: 'Wialon Integration',
    settings: 'System Settings',
  },
  details: {
    title: 'Company Information',
    legalName: 'Legal Name',
    shortName: 'Short Name',
    legalForm: 'Legal Form',
    edrpou: 'EDRPOU Code',
    taxNumber: 'Tax Number',
    legalAddress: 'Legal Address',
    actualAddress: 'Actual Address',
    phone: 'Phone',
    email: 'Email',
    website: 'Website',
    director: 'Director',
    directorPosition: 'Director Position',
    accountant: 'Chief Accountant',
    logo: 'Company Logo',
    uploadLogo: 'Upload Logo',
    removeLogo: 'Remove Logo',
    saveSuccess: 'Company information has been saved successfully',
    logoUploadSuccess: 'Logo has been uploaded successfully',
    countryCode: 'Country Code',
  },
  bankAccounts: {
    title: 'Bank Accounts',
    addNew: 'Add New',
    addAccount: 'Add Account',
    editAccount: 'Edit Account',
    bankName: 'Bank Name',
    accountNumber: 'Account Number',
    iban: 'IBAN',
    mfo: 'MFO',
    swift: 'SWIFT Code',
    currency: 'Currency',
    isDefault: 'Default',
    isActive: 'Active',
    defaultAccount: 'Default Account',
    description: 'Description',
    confirmDelete: 'Confirm Delete',
    deleteWarning: 'Are you sure you want to delete this bank account?',
    createSuccess: 'Bank account has been created successfully',
    updateSuccess: 'Bank account has been updated successfully',
    deleteSuccess: 'Bank account has been deleted successfully',
  },
  documents: {
    title: 'Legal Documents',
    uploadNew: 'Upload New',
    uploadDocument: 'Upload Document',
    documentName: 'Document Name',
    documentType: 'Document Type',
    effectiveDate: 'Effective Date',
    expiryDate: 'Expiry Date',
    description: 'Description',
    file: 'File',
    fileSize: 'File Size',
    uploadDate: 'Upload Date',
    maxFileSize: 'Maximum file size: 10 MB',
    confirmDelete: 'Confirm Delete',
    deleteWarning: 'Are you sure you want to delete this document?',
    uploadSuccess: 'Document has been uploaded successfully',
    deleteSuccess: 'Document has been deleted successfully',
  },
  wialonIntegration: {
    title: 'Wialon Integration Settings',
    description: 'Configure connection to Wialon system for synchronizing clients and objects',

    // Basic fields
    apiUrl: 'API URL',
    apiUrlHint: 'Example: https://hst-api.wialon.com',
    tokenName: 'Token Name',
    tokenNameHint: 'Name for token identification in the system',
    tokenValue: 'Token Value',
    tokenValueHint: 'API token obtained from Wialon system',
    syncInterval: 'Sync Interval (minutes)',
    syncIntervalHint: 'How often to perform automatic synchronization',
    isActive: 'Active Integration',

    // Status
    status: 'Connection Status',
    statusConnected: 'Connected',
    statusDisconnected: 'Disconnected',
    statusError: 'Error',
    statusTesting: 'Testing...',

    // Sync information
    lastSyncTime: 'Last Synchronization',
    lastSyncSuccess: 'Successful Synchronization',
    lastSyncError: 'Synchronization Error',
    neverSynced: 'Synchronization has not been performed yet',

    // Actions and buttons
    testConnection: 'Test Connection',
    syncObjects: 'Sync Objects',
    saveSettings: 'Save Settings',
    resetSettings: 'Reset Settings',

    // Success messages
    connectionSuccess: 'Connection successful!',
    connectionSuccessDetails: 'Connection to Wialon established successfully',
    saveSuccess: 'Wialon integration settings have been saved successfully',
    syncSuccess: 'Objects synchronized successfully',
    syncSuccessDetails: 'Created: {created}, Updated: {updated}, Skipped: {skipped}',
    tokenSavedHint: 'Token is saved. Leave empty to keep unchanged.',

    // Error messages
    connectionError: 'Connection error',
    connectionErrorDetails: 'Failed to connect to Wialon. Please check settings',
    saveError: 'Error saving settings',
    syncError: 'Synchronization error',
    tokenRequired: 'Token is required for connection',
    apiUrlRequired: 'API URL is required',

    // Additional settings
    additionalSettings: 'Additional Settings',
    encryptionMethod: 'Encryption Method',
    encryptionMethodHint: 'Token encryption method in database',

    // Help and information
    integrationHelp: 'Integration Help',
    integrationHelpText:
      'To configure Wialon integration, you need to obtain an API token from Wialon system',
    securityNote: 'Security Note',
    securityNoteText: 'Token is stored encrypted in the database',
  },
  settings: {
    title: 'System Settings',
    category: 'Category',
    key: 'Key',
    value: 'Value',
    valueType: 'Value Type',
    description: 'Description',
    isPublic: 'Public',
    add: 'Add Setting',
    edit: 'Edit Setting',
    noSettings: 'No system settings found',
    confirmDelete: 'Are you sure you want to delete this setting?',
    saveSuccess: 'Setting has been saved successfully',
    deleteSuccess: 'Setting has been deleted successfully',
    categories: {
      system: 'System',
      email: 'Email',
      invoice: 'Invoice',
      general: 'General',
    },
    valueTypes: {
      string: 'Text',
      number: 'Number',
      boolean: 'Yes/No',
      json: 'JSON',
      date: 'Date',
    },
  },
  invoiceTemplates: {
    title: 'Invoice Templates',
    addTemplate: 'Add Template',
    createFirstTemplate: 'Create First Template',
    noTemplates: 'No invoice templates found',
    editTemplate: 'Edit Template',
    createTemplate: 'Create Template',
    basicInfo: 'Basic Information',
    name: 'Template Name',
    code: 'Template Code',
    description: 'Description',
    isActive: 'Active',
    isDefault: 'Default',
    exportTemplate: 'Export Template',
    importTemplate: 'Import Template',
    useDefaultTemplate: 'Use Default Template',
    htmlTemplate: 'HTML Template',
    cssStyles: 'CSS Styles',
    preview: 'Preview',
    help: 'Help',
    htmlPlaceholder: 'Enter HTML template code',
    cssPlaceholder: 'Enter CSS styles for template',
    codeReadOnly: 'Template code cannot be changed after creation',
    defaultTemplateLoaded: 'Default template loaded',
    updateSuccess: 'Template updated successfully',
    createSuccess: 'Template created successfully',
    exportSuccess: 'Template exported successfully',
    importSuccess: 'Template imported successfully',
    importError: 'Error importing template',
    readError: 'Error reading file',
    selectTemplateFile: 'Select template file',
    importCssAlso: 'Also import CSS styles',
    previewRendered: 'Rendered',
    previewHtml: 'HTML code',
    previewCss: 'CSS styles',
    duplicate: 'Duplicate',
    copy: 'copy',
    duplicateSuccess: 'Template duplicated successfully',
    setAsDefault: 'Set as default',
    defaultSuccess: 'Template set as default',
    deleteConfirm: 'Are you sure you want to delete template "{name}"?',
    deleteSuccess: 'Template deleted successfully',
    default: 'Default',
    inactive: 'Inactive',

    // Help section
    helpTitle: 'Invoice Template Help',
    helpDescription:
      'Use this page to create and edit invoice templates. Templates use Handlebars syntax for inserting dynamic data.',
    availableVariables: 'Available Variables',
    variableName: 'Variable Name',
    variableDescription: 'Description',
    example: 'Example',

    // Variable descriptions
    invoiceNumber: 'Invoice number',
    invoiceDate: 'Invoice date',
    totalAmount: 'Total amount',
    clientName: 'Client name',
    clientAddress: 'Client address',
    billingMonth: 'Billing month',
    billingYear: 'Billing year',
    items: 'Invoice items',
    companyName: 'Company name',
    companyEdrpou: 'Company EDRPOU code',
    companyAddress: 'Company address',
    formattedDate: 'Formatted date',
    formattedTotal: 'Formatted total amount',
    currentDate: 'Current date',

    // Helpers
    handlebarHelpers: 'Handlebars Helpers',
    helper: 'Helper',
    usage: 'Usage',
    eachHelper: 'Loop through array items',
    ifHelper: 'Conditional operator',
    formatCurrencyHelper: 'Format amount as currency',
  },
}
